# Kickstart file for a Red Hat environment server
############################################################
# revision history
############################################################
# 0.15
# ldap works
#
# 0.16
# added ldapuser
# moved localuser below ldap export so it is server local only
# renamed the rhel dvd repo from local to server1
# ntp now uses itself as a stratum 3 clock, this is required because the lab doesn't have a stratum ntp server
#
# 0.17
# changed ip addresses 192.168.* to 172.26.* to make the kickstart compatible with more environments
# added some config and notes for future addition of kerberos
#
# 0.17.1
# changed root users password (rootpw) to plaintext
# changed ldap password to plaintext with slappasswd built-in to generate the hash
# changed eth0 IP to 192.168.1.50
# changed dns servers to google's public dns 8.8.8.8 and 8.8.4.4 for NIC and dns forwarding
#
# 0.17.2
# clearpart now removes partitions on all hard drives attached
# iptables is enabled and rules are created for running services
# 
# 0.17.3
# added iptables rule port 20 for ftp
#
# 0.17.4
# disable GSSAPIAuthentication for ssh daemon to fix slow login
# added ip_conntrack_ftp and removed port 20 from iptables
#
# 0.17.5
# changed copy path for id_rsa.pub
# copying from ~ does not work in a kickstart
#
# 0.17.6
# fixed a type in route creation for 172.26.X.0/24
#
# 0.17.7
# created a default webpage /var/www/html/index.html
#
# 0.17.8
# updated rev dns for 172.26.0.x
# changed soa and admin email on dns zones
# eth0 is dhcp
#
# 0.17.9
# missed
#
# 0.17.10
# should have been in 0.17.9
# changed name of VMwareTools file on ftp materials
# copy VMwareTools-*.tar.gz to /var/ftp/pub/materials/VMwareTools.tar.gz
#
# echo "olcRootPW: $(slappasswd -ns password)" >>"/etc/openldap/slapd.d/cn=config/olcDatabase={2}bdb.ldif"
# the CORRECT filename is olcDatabase={2}bdb.ldif
#
# added --initlabel
# thanks Daniel_Johnson1
# clearpart --linux --initlabel
#
# corrected remarks that eth0 is 192.168.1.50, it is actually dhcp
#
# 0.17.11
# improved cd copying routine and tftp menu naming to be more dynamic
# export distro_name=`grep name= media.repo | cut -d= -f2`
# export short_name=`echo $distro_name|sed -e 's/Red Hat Enterprise Linux /rhel/'`
# added iscsi targets, 25M each for 50 stations
#
# 0.17.12
# changed the name of station.ks to station_ks.cfg so the rename is more consistent.
#
# 0.17.13
# Added packages ftp, lftp and samba-client
# Added /etc/kickstart-release so it is easier to identify the installed version
# and impliment changes since that version
#
# 0.17.13.1
# added the kickstart-release contents to /etc/issue so it displays on the console
#
# 0.17.14
# the ldap file with the root password is not consistently named; the number changes on some installs
# to resolve this, we will determine the filename when installing
#
# 0.17.14.1
# The sed to add the ip_conntrack_ftp module was missing the -i to edit inline
# added -i.bak which will make a backup of the file with the extension .bak and edit the live file
# sed -e 's/IPTABLES_MODULES="/&ip_conntrack_ftp /' -i.bak /etc/sysconfig/iptables-config
#
# 0.17.15
# VirtualBox and CentOS enhancements
# The post install checks to see if /dev/cdrom is a block device and uses it if so
# If not, it will look in dmesg for a line starting with sr[0-9]: and picks the last line (sr1 instead of sr0, etc)
# Also removed the check on the line for "cd" because it does not show up in some cases
# This line is from VirtualBox running on Mint i.e. sr0: scsi3-mmc drive: 32x/32x xa/form2 tray
#
# Distro detection is more complex, but should be more flexable too
#
# 0.17.15.1
# CentOS doesn't make the /etc/yum.repos.d dir, so making the repo file failed
#
# 0.17.15.2
# added checks for centos or rhel for local repo files and station repo files
#
# 0.17.15.3
#
# 0.17.15.4
# added if; echo after mkdir to simplify troubleshooting and logging
#
# 0.17.15.5
# post with chroot wasn't detecting centos correctly
# post with no-chroot exports the names to a file ~root/export_names to be sourced in the post chroot
#
# 0.17.16
# You no longer need to run ypinit manually. Before 0.17.16, you must run this interactively: /usr/lib/yp/ypinit -m
# station kickstart is now at the bottom of the server kickstart to make use of variables available in server post
# seperate version numbers for server and station will be maintained for the time being

############################################################
# Not yet implimented
############################################################
# kerberos

############################################################
# Virtual Machine configuration
############################################################
# Create a vm named server1
# 2GB RAM
# 1 hard drive, 40GB
# 2 network cards
# the first should be bridged or connected to your LAN
# the second should be connected to a private switch
#
# Create up to 40 stations
# 1GB RAM
# 2 hard drives, 20GB and 100MB
# 1 network card, this should be connected to the private switch

############################################################
# Default passwords
############################################################
# potentially sensitive fields are labeled "# password flag" for easy scrubbing
#
# password flag
# username: root
# password: password
#
# ldap 
# Use the command "slappasswd" to generate the hash
# BINDDN cn=Manager,dc=example,dc=com
# password: password
#
# CA passphrase: cacertpass

############################################################
# Installing
############################################################
# Mount the RHEL 6.1 or CentOS 6.4 DVD and the kickstart floppy on the server VM
# Boot the DVD and at the grub menu select the install option and press tab to edit the line.
# At the end of the line add " ks=floppy" and hit enter
# reboot when it gets to the "reboot" screen

############################################################
# After install and reboot,
############################################################
#
# My lab is based on VMWare ESXi 5.0
# Updated 29 Aug 2013 for VirtualBox
# the VMWareTools*.tar.gz is available by Installing VMWare Tools on server1
# and copy the tar gz from the virtual CD
# It only installs on the clients if they are a VMWare VM during install
#
# We use a generic name for VMwareTools to prevent the need to edit the station kickstart
# copy VMwareTools-*.tar.gz to /var/ftp/pub/materials/VMwareTools.tar.gz
#
# Starting with station_ks_0_5_11, the kickstart is at the base of the server kickstart
# and is automatically created with correct paths

############################################################
# Installing the station
############################################################
# The server provides dhcp on the private network and
# pxe/tftp to install the stations.
#
# Create the station VM with the specifications above,
# power it on, and it will boot and install over the network.
#
# More details about what it does:
# Power on the workstation, it will boot from network,
# obtain a dhcp address, pull the kernel from tftp,
# then will pull the kickstart and remaining files
# from server1 automatically.

############################################################
# How to build a virtual floppy with the kickstart
############################################################
# The kickstart floppy was created from directions at this link:
# http://lanestechblog.blogspot.com/2009/08/creating-floppy-image-in-windows.html
# Download link at http://www.nu2.nu/bfi/

# Name the kickstart "ks.cfg" and place it in c:\temp\floppyfiles
# bfi -f=c:\temp\Linux_ks_0_12.flp c:\temp\floppyfiles


############################################################
# What server1 provides
############################################################
# hostname: server1.example.com
# eth0: DHCP, it used to be 192.168.1.50 
# eth1: 172.26.0.1
# student accessible account passwords are "password"
#
# routes through 172.26.0.X to 172.26.X.0/24
# permits the server to reach a second nic on the station
# with the second nic being on the network 172.26.X.0/24
#
# NIS and LDAP directory services are available
# Users named guest01-50 exist local and in directory services
# ldapuser exists local and in directory services
#
# localuser exists on the local server only
#
# An example repo file exists in /var/ftp/pub/materials/server1.repo
# also available at
# ftp://server1.example.com/var/ftp/pub/Server
# http://server1.example.com/pub/rhel6.1/Server
# nfs server1:/var/ftp/pub/rhel6.1/Server

# DHCP
# assigns addresses 172.26.0.101-150

# DNS
# PTR records for 172.26.0.201-250 resolve stationX.example.com
# PTR records for 172.26.0.101-150 resolve dhcpX.example.com
# dhcpX.example.com resolves to 172.26.0.101-150
# stationX.example.com resolves to 172.26.0.201-250
# stationX.com resolves to 172.26.0.201-250

# TFTP
# To provide for PXE boot of student stations

# NTP server
# there is not a stratum clock in the lab
# NTP is setup to think its own clock is a stratum 3
# Would work better if there was a stratum clock available to the lab
# check the local time table with "ntpq -pn"

# LDAP
# Users named guest1-50 with the password “password”
# ldap directory is setup with all non-daemon users

# NIS
# NIS structure exists with non-daemon users
# Before 0.17.16, you must run this interactively: /usr/lib/yp/ypinit -m
# You no longer need to run ypinit.
# "ypinit -m" must be run interactively after the install and reboot completes

# NFS exports
# /var/ftp/pub     *(ro,sync)
# /home/server1    *(rw,sync)

# iSCSI Targets for each station
# 25M each

install
cdrom
key --skip
lang en_US.UTF-8
keyboard us
#xconfig --startxonboot
# password flag - change the IP
# see, its dhcp now instead of 192.168.1.50
#network --device eth0 --bootproto=static --ip=192.168.1.50 --netmask=255.255.240.0 --gateway=192.168.1.1 --nameserver=127.0.0.1,8.8.8.8,8.8.4.4 --onboot=yes --hostname server1.example.com
network --device eth0 --bootproto=dhcp --nameserver=127.0.0.1,8.8.8.8,8.8.4.4 --onboot=yes --hostname server1.example.com
network --device eth1 --bootproto=static --ip=172.26.0.1 --netmask=255.255.255.0 --onboot=yes
# password flag
rootpw password
#firewall --service=ssh
firewall --ssh --ftp --http --port=20:53:tcp,2049:tcp,32803:tcp,389:tcp,808:tcp,875:tcp,111:tcp,662:tcp,631:tcp,25:tcp,892:tcp,874:udp,875:udp,111:udp,631:udp,123:udp,892:udp,32769:udp,2049:udp,662:udp,808:udp,53:udp,67:udp,69:udp,713:udp
firewall --enabled
authconfig --enableshadow --passalgo=sha512
selinux --enforcing
timezone --utc America/Chicago
bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb quiet"


# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work

#clearpart --linux --drives=sda
clearpart --linux --initlabel

part /boot --fstype=ext4 --size=500
part pv.008002 --grow --size=1

volgroup vg_server --pesize=4096 pv.008002
logvol / --fstype=ext4 --name=lv_root --vgname=vg_server --grow --size=1024 --maxsize=51200
logvol swap --name=lv_swap --vgname=vg_server --grow --size=2032 --maxsize=4064

#repo --name="Linux in a Box"  --baseurl=http://server1/pub/$short_name/
repo --name="DVD"  --baseurl=cdrom://sr0:/mnt/source --cost=500

%packages
@base
@client-mgmt-tools
@console-internet
@core
@debugging
@directory-client
@hardware-monitoring
@java-platform
@large-systems
@network-file-system-client
@performance
@perl-runtime
@server-platform
@server-policy
pax
python-dmidecode
oddjob
sgpio
certmonger
pam_krb5
krb5-workstation
perl-DBD-SQLite
httpd
vsftpd
nfs-utils
dhcp
tftp
tftp-server
bind-chroot
createrepo
openldap-servers
openldap-devel
openldap-clients
ypserv
migrationtools
syslinux
krb5-workstation
krb5-server
scsi-target-utils
iscsi-initiator-utils
ftp
lftp
samba-client

%post --nochroot
(
# mount the cdrom
# If no symlink for /dev/cdrom, find the cd-rom device and make one
if [ -b /dev/cdrom ]; then
  cddev="cdrom"
else
  # cddev="`dmesg | grep '^sr.:' | grep -i cd | head -1 | cut -d: -f1 | cut -d\> -f2`"
  cddev="`dmesg | egrep '^sr[0-9]:' | tail -1 | cut -d: -f1 | cut -d\> -f2`"
fi
dmesg >/mnt/sysimage/root/post-dmesg.log

echo "cddev $cddev"
mkdir -p /mnt/cdrom
if [ ! -d /mnt/cdrom ];then echo "failed to create mount point /mnt/cdrom"; fi
mount -o ro /dev/$cddev /mnt/cdrom

# 0.17.11
# export repo_file=`find /mnt/cdrom/ -type f -name "media.repo"` || export repo_file=`find /var/ftp/pub/ -type f -name "media.repo"`
export repo_file=`find /mnt/cdrom/ -type f -name "media.repo"|head -n1`
# 0.17.15
if [ $repo_file ]; then
  # probably RHEL. CentOS doesn't have media.repo on CentOS 6.4
  export distro_name=`grep name= $repo_file | cut -d= -f2`
  export short_name=`echo $distro_name|sed -e 's/Red Hat Enterprise Linux /rhel/'`
  #export short_name=`echo $distro_name|sed -e 's/Red Hat Enterprise Linux /rhel/;s/CentOS/centos/'`
else
  #hmm
  export distro_name=`dd if=/dev/$cddev bs=1 skip=32808 count=32 conv=unblock cbs=32 2>/dev/null`
  export short_name=`echo $distro_name|sed -e 's/_//g;s/CentOS/centos/;s/Final//'`
fi

export|grep -e distro_name -e short_name -e repo_file > /mnt/sysimage/root/export_names

# copy over the customized installer
echo "Copying from the optical media"
mkdir -p /mnt/sysimage/var/ftp/pub/$short_name
if [ ! -d /mnt/sysimage/var/ftp/pub/$short_name ];then echo "/mnt/sysimage/var/ftp/pub/$short_name"; fi

cp -R /mnt/cdrom/* /mnt/sysimage/var/ftp/pub/$short_name/
umount -f /mnt/cdrom
# unmount cdrom & remove the installer
rmdir /mnt/cdrom ) 2>&1 | tee /mnt/sysimage/root/post-install.log | tee /dev/console

############################################################
# POST
#tests for cent and rhel
#if [[ "$short_name" == *centos* ]]; then
#if [[ "$short_name" == *rhel* ]]; then
############################################################
%post
mkdir -p /root
echo "starting post" >/root/post-chroot-install.log
(
echo "logging environment" >>/root/post-chroot-install.log
mount >/root/mount
fdisk -l >/root/fdisk

# 0.17.11
# these variables are used in the repos file and tftp config files
# 0.17.15.5
# export repo_file
# export distro_name
# export short_name

if [ -f /root/export_names ]; then
. /root/export_names
fi
#export repo_file=`find /var/ftp/pub/ -type f -name "media.repo"|head -n1`
#if [ $repo_file ]; then
#  # probably RHEL. CentOS doesn't have media.repo on CentOS 6.4
#  export distro_name=`grep name= $repo_file | cut -d= -f2`
#  export short_name=`echo $distro_name|sed -e 's/Red Hat Enterprise Linux /rhel/'`
#  #export short_name=`echo $distro_name|sed -e 's/Red Hat Enterprise Linux /rhel/;s/CentOS/centos/'`
#else
#  #hmm
#  export distro_name=`dd if=/dev/$cddev bs=1 skip=32808 count=32 conv=unblock cbs=32 2>/dev/null`
#  export short_name=`echo $distro_name|sed -e 's/_//g;s/CentOS/centos/;s/Final//'`
#fi

export >/root/export.log
) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# build the repos file for the server to use
############################################################
echo "Create repo files" >>/root/post-chroot-install.log
(
# 0.17.11
# changed the way the paths are built to be more dynamic
# 0.17.15.1 CentOS does not have the /etc/yum.repos.d, added mkdir -p
mkdir -p /etc/yum.repos.d
if [ ! -d /etc/yum.repos.d ];then echo "Could not create /etc/yum.repos.d"; fi
echo "short name: $short_name"
sed -e 's/enabled=1/enabled=0/' -i /etc/yum.repos.d/*


# for CentOS
if [[ "$short_name" == *centos* ]]
then
cat >/etc/yum.repos.d/$short_name.repo <<EOF
[InstallMedia]
name=$distro_name
baseurl=file:///var/ftp/pub/$short_name/
enabled=1
gpgcheck=0
cost=500
EOF
fi

# for RHEL
if [[ "$short_name" == *rhel* ]]
then
cat >/etc/yum.repos.d/$short_name.repo <<EOF
[InstallMedia]
name=$distro_name
baseurl=file:///var/ftp/pub/$short_name/Server
gpgcheck=0
cost=500

[dvd-HighAvailability]
name=DVD for $short_name - HighAvailability
baseurl=file:///var/ftp/pub/$short_name/HighAvailability
enabled=1
gpgcheck=0

[dvd-LoadBalancer]
name=DVD for $short_name - LoadBalancer
baseurl=file:///var/ftp/pub/$short_name/LoadBalancer
enabled=1
gpgcheck=0

[dvd-ResilientStorage]
name=DVD for $short_name - ResilientStorage
baseurl=file:///var/ftp/pub/$short_name/ResilientStorage
enabled=1
gpgcheck=0
EOF
fi
#remove mediaid and metadata_expire, but we just stomped the file so they won't be there
#sed -i -e /^mediaid.*/d -e /^metadata_expire.*/d /mnt/sysimage/etc/yum.repos.d/rhel6.repo
) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# /etc/kickstart-release
############################################################
echo "create kickstart-release" >>/root/post-chroot-install.log
(
echo "$distro_name Lab in a Box - server1 kickstart 0.17.16" >/etc/kickstart-release
cat /etc/kickstart-release >>/etc/issue
) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# nfs server
############################################################
echo "nfs server" >>/root/post-chroot-install.log
(
cat >/etc/exports <<EOF
/var/ftp/pub        *(ro,sync)
EOF
# not needed for RHEL 6
cat >>/etc/sysconfig/nfs <<EOF
RQUOTAD_PORT=875
MOUNTD_PORT=892
STATD_PORT=662
LOCKD_TCPPORT=32803
LOCKD_UDPPORT=32769
EOF
#/etc/init.d/nfs start
chkconfig nfs on
) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# routes for testing
############################################################
echo "routes" >>/root/post-chroot-install.log
(
for i in `seq 1 9`
do
cat >>/etc/sysconfig/network-scripts/route-eth1 <<EOF
172.26.$i.0/24 via 172.26.0.20$i dev eth1
EOF
done
for i in `seq 10 50`
do
cat >>/etc/sysconfig/network-scripts/route-eth1 <<EOF
172.26.$i.0/24 via 172.26.0.2$i dev eth1
EOF
done
#/etc/init.d/network restart
) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# web server httpd
############################################################
echo "web server" >>/root/post-chroot-install.log
(
cd /var/www/html
ln -s /var/ftp/pub
#/etc/init.d/httpd start
chkconfig httpd on
) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# ftp server vsftpd
############################################################
echo "ftp server" >>/root/post-chroot-install.log
(
#/etc/init.d/vsftpd start
chkconfig vsftpd on
) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# dhcp server
############################################################
echo "dhcp server" >>/root/post-chroot-install.log
(
sed -i.bak -e s/DHCPDARGS=/DHCPDARGS=eth1/ /etc/sysconfig/dhcpd
cat >/etc/dhcp/dhcpd.conf <<EOF
authoritative;
default-lease-time 14400;
max-lease-time 14400;
lease-file-name "/var/lib/dhcpd/dhcpd.leases";
ddns-update-style none;
option domain-name "example.com";
option subnet-mask 255.255.255.0;

allow booting;
allow bootp;
class "pxeclients" {
match if substring(option vendor-class-identifier, 0, 9) = "PXEClient";
next-server 172.26.0.1;
filename "pxelinux.0"; }

subnet 172.26.0.0 netmask 255.255.255.0 {
        option domain-name-servers 172.26.0.1;
        option routers 172.26.0.1;
        option broadcast-address 172.26.0.255;
        range 172.26.0.101 172.26.0.150;
}

host station1 {
        option host-name "station1";
        fixed-address 172.26.0.201;
        hardware ethernet 00:50:56:bb:75:ab;
}
host station2 {
        option host-name "station2";
        fixed-address 172.26.0.202;
        hardware ethernet 00:50:56:bb:55:3d;
}
EOF
#/etc/init.d/dhcpd start
chkconfig dhcpd on
) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# DNS server bind
############################################################
echo "DNS server" >>/root/post-chroot-install.log
(
cat >/var/named/chroot/etc/named.conf <<EOF
options {
        directory "/var/named";
# password flag - change the forwarder DNS servers
        forwarders { 8.8.8.8; 8.8.4.4; };
        listen-on { 127.0.0.1; 172.26.0/24; };
};
zone "example.com" IN {
        type master;
        file "db.example.com";
        allow-update { none; };
};
zone "0.26.172.in-addr.arpa" IN {
        type master;
        file "db.0.26.172.in-addr.arpa";
        allow-update { none; };
};
EOF
cat >/var/named/chroot/var/named/db.0.26.172.in-addr.arpa <<EOF
\$TTL 86400
@       IN      SOA     server1.example.com.    root.server1.example.com.       (
                                                20080915        ; Serial
                                                28800                   ; Refresh
                                                14400                   ; Retry
                                                3600000                 ; Expire
                                                86400 )                 ; Minimum


                        IN NS   server1.example.com.

1                       IN PTR  server1.example.com.
\$GENERATE 1-9  20\$    IN PTR  station\$.example.com.
\$GENERATE 10-50  2\$   IN PTR  station\$.example.com.

\$GENERATE 1-9   10\$     IN PTR  dhcp\$.example.com.
\$GENERATE 10-50 1\$      IN PTR  dhcp\$.example.com.
EOF
cat >/var/named/chroot/var/named/db.example.com <<EOF
\$TTL 86400
@       1D IN SOA       server1.example.com.       root.server1.example.com.    (
                                20080916                ; serial (yyyymmdd)
                                3H                      ; refresh
                                15M                     ; retry
                                1W                      ; expiry
                                1D )                    ; minimum

                IN      NS      server1.example.com.

; station1      IN A    172.26.0.101
server1         IN A    172.26.0.1
\$GENERATE 1-9 station\$  IN A    172.26.0.20\$
\$GENERATE 10-50 station\$  IN A    172.26.0.2\$

\$GENERATE 1-9 dhcp\$    IN A    172.26.0.10\$
\$GENERATE 10-50 dhcp\$  IN A    172.26.0.1\$
EOF
for i in `seq 1 9`; do
cat >/var/named/chroot/var/named/db.station$i.com <<EOF
\$TTL 86400
@       1D IN SOA       server1.example.com.       root.server1.example.com.    (
                                20080921                ; serial (yyyymmdd)
                                3H                      ; refresh
                                15M                     ; retry
                                1W                      ; expiry
                                1D )                    ; minimum

                IN      NS      station$i.com.
                IN      NS      station$i.example.com.
                IN      NS      server1.example.com.

                IN MX 10    station$i.com
                IN A    172.26.0.20$i
www             IN A    172.26.0.20$i
ns              IN A    172.26.0.20$i
EOF
done

for i in `seq 10 50`; do
cat >/var/named/chroot/var/named/db.station$i.com <<EOF
\$TTL 86400
@       1D IN SOA       server1.example.com.       root.server1.example.com.    (
                                20080921                ; serial (yyyymmdd)
                                3H                      ; refresh
                                15M                     ; retry
                                1W                      ; expiry
                                1D )                    ; minimum

                IN      NS      station$i.com.
                IN      NS      station$i.example.com.
                IN      NS      server1.example.com.

                IN A    172.26.0.2$i
                IN MX 10 172.26.0.2$i
www             IN A    172.26.0.2$i
ns              IN A    172.26.0.2$i
EOF
done


for i in `seq 1 9`; do
cat >>/var/named/chroot/etc/named.conf <<EOF
zone "station$i.com" IN {
        type master;
        file "db.station$i.com";
        allow-update { none; };
        allow-transfer { 172.26.0.20$i; };
};
EOF
done

for i in `seq 10 50`; do
cat >>/var/named/chroot/etc/named.conf <<EOF
zone "station$i.com" IN {
        type master;
        file "db.station$i.com";
        allow-update { none; };
        allow-transfer { 172.26.0.2$i; };
};
EOF
done

chkconfig named on
) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# tftp for pxe installing of stations
############################################################
echo "tftp server" >>/root/post-chroot-install.log
(
sed -r 's/(disable\s*=\s*)(yes)/\1no/' -i.bak /etc/xinetd.d/tftp
#/etc/init.d/xinetd restart
#chkconfig not required

mkdir -p /var/lib/tftpboot/pxelinux.cfg
if [ ! -d /var/lib/tftpboot/pxelinux.cfg ];then echo "/var/lib/tftpboot/pxelinux.cfg"; fi

# 0.17.11
#export repo_file=`find /var/ftp/pub/ -type f -name "media.repo"|head -n1`
#export distro_name=`grep name= $repo_file | cut -d= -f2`
#export short_name=`echo $distro_name|sed -e 's/Red Hat Enterprise Linux /rhel/'`
#echo $repo_file
#echo $distro_name
#echo $short_name

cat >/var/lib/tftpboot/pxelinux.cfg/default <<EOF
display f1.msg
prompt 1
timeout 600
default quit

label quit
  localboot 0

EOF
echo `clear` >/var/lib/tftpboot/f1.msg
cat >>/var/lib/tftpboot/f1.msg <<EOF
pxe boot menu

type this : to do this
quit      : boot the local hard drive
EOF

for full_path in `find /var/ftp/pub -name pxeboot -type d`
do

#echo $full_path
# comp_name = extract the 5th field, divider /
export comp_name=`echo $full_path|cut -d'/' -f5`
mkdir -p /var/lib/tftpboot/$comp_name
if [ ! -d /var/lib/tftpboot/$comp_name ];then echo "/var/lib/tftpboot/$comp_name"; fi

cp $full_path/* /var/lib/tftpboot/$comp_name/

cat >>/var/lib/tftpboot/pxelinux.cfg/default <<EOF
label $comp_name
  kernel $comp_name/vmlinuz
  append initrd=$comp_name/initrd.img noipv6 ks=http://server1/pub/materials/station_ks.cfg
EOF

cat >>/var/lib/tftpboot/f1.msg <<EOF
$comp_name   : install $comp_name
EOF

done
# 0.17.11 add a trailing slash to clarify we are copying to a directory
cp /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/
) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# ntp server
############################################################
echo "ntp server" >>/root/post-chroot-install.log
(
#fixme
cat >/etc/ntp.conf <<EOF
restrict default kod nomodify notrap nopeer noquery
restrict 127.0.0.1
restrict -6 ::1
restrict 172.26.0.0 mask 255.255.0.0 nomodify notrap
restrict 127.127.1.0
server 127.127.1.0
fudge   127.127.1.0 stratum 3
driftfile /var/lib/ntp/drift
keys /etc/ntp/keys
#server ntp.us.dell.com
restrict ntp.us.dell.com mask 255.255.255.255 nomodify notrap noquery
EOF
#/etc/init.d/ntpd restart
chkconfig ntpd on
#ntpdate ntp.us.dell.com
) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# NIS server
############################################################
echo "NIS server" >>/root/post-chroot-install.log
(
mkdir /home/server1
if [ ! -d /home/server1 ];then echo "/home/server1"; fi

cat >>/etc/exports <<EOF
/home/server1         *(rw,sync)
EOF
exportfs -a
cat >>/etc/sysconfig/network <<EOF
NISDOMAIN="CLASS-NIS"
YPSERV_ARGS=" -p 808"
#YPXFRD_ARGS=" -p 809"
EOF
cat >>/etc/yp.conf <<EOF
ypserver 127.0.0.1
EOF
#/etc/init.d/portmap start
#/etc/init.d/ypserv start
chkconfig ypserv on

# before 0.17.16, you must run this interactively: /usr/lib/yp/ypinit -m
# ypinit is a script, these are the commands it runs. You no longer need to run ypinit.
	(
	YPMAPDIR=/var/yp
	YPBINDIR=/usr/lib/yp
	HOST=""
	DOMAIN=""
	MASTER=""
	HOST=`$YPBINDIR/yphelper --hostname`
	if [ $? -ne 0 ]
	then
		echo "Can't get local host's name.  Please check your path."
		exit 1
	fi
	if [ -z "$HOST" ]
	then
		echo "The local host's name hasn't been set.  Please set it."
		exit 1
	fi

	DOMAIN=`domainname`
	if [ $? -ne 0 ]
	then
		echo "Can't find domainname. Please fix your PATH"
		exit 1
	fi
	if [ -z "$DOMAIN" ]
	then
		echo "The local host's domain name hasn't been set.  Please set it."
		exit 1
	fi
	if [ ! -d $YPMAPDIR -o -f $YPMAPDIR ]
	then
		echo "The directory $YPMAPDIR doesn't exist."
		echo "Create it or run make install-* from the sourcen."
		exit 1
	fi
	# start making the nis master
	mkdir -p $YPMAPDIR/$DOMAIN
	rm -f $YPMAPDIR/$DOMAIN/*
	echo "We need a few minutes to build the databases..."
	echo "Building $YPMAPDIR/$DOMAIN/ypservers..."
	cat $YPMAPDIR/ypservers | awk '{print $$0, $$0}' | $YPBINDIR/makedbm - $YPMAPDIR/$DOMAIN/ypservers
	if [ $?  -ne 0 ]
	then
		echo "Couldn't build yp data base $YPMAPDIR/$DOMAIN/ypservers."
		echo "Please fix it."
	fi
	echo "Running $YPMAPDIR/Makefile..."
	cd $YPMAPDIR && make NOPUSH=true
	if [ $? -ne 0 ]
	then
		echo "Error running Makefile."
		echo "Please try it by hand."
	else
		echo ""
		echo "$HOST has been set up as a NIS master server."
		echo ""
		echo "Now you can run ypinit -s $HOST on all slave server."
	fi
	)



) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# making some users
############################################################
echo "making users" >>/root/post-chroot-install.log
(
# password flag
useradd -g users -g 100 ldapuser
echo "password" | passwd --stdin ldapuser

for i in `seq -w 1 50`
do
# password flag
useradd -g users -u 10$i -g 100 -d /home/server1/guest$i guest$i
echo "password" | passwd --stdin guest$i
done
cd /var/yp
sed -e s/MINUID=500/MINUID=1000/ -i /var/yp/Makefile
sed -e s/MINGID=500/MINGID=1000/ -i /var/yp/Makefile
#and you don't need to make again unless you add users
#make -C /var/yp
) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# Create Certificate Authority CA
############################################################
echo "create certificate authority" >>/root/post-chroot-install.log
(
# clean-up
# rm /etc/pki/CA/private/cakey.pem /etc/pki/CA/cacert.pem /var/ftp/pub/materials/cacert.pem
# password flag
(umask 077;openssl genrsa -passout pass:cacertpass -out /etc/pki/CA/private/cakey.pem -des3 2048)
# password flag
openssl req -new -x509 -passin pass:cacertpass -key /etc/pki/CA/private/cakey.pem -days 3650 >/etc/pki/CA/cacert.pem <<EOF
US
Texas
San Antonio
none

server1.example.com
root@server1.example.com
EOF

mkdir -p /var/ftp/pub/materials
if [ ! -d /var/ftp/pub/materials ];then echo "/var/ftp/pub/materials"; fi
rm -f /var/ftp/pub/materials/cacert.pem
cp /etc/pki/CA/cacert.pem /var/ftp/pub/materials/cacert.pem

touch /etc/pki/CA/index.txt
echo "01" > /etc/pki/CA/serial
touch /etc/pki/CA/cacert.srl
echo "01" > /etc/pki/CA/cacert.srl

cp /etc/pki/CA/cacert.pem /etc/openldap/cacerts/
ln -s /etc/openldap/cacerts/cacert.pem /etc/openldap/cacerts/`openssl x509 -hash -noout -in /etc/openldap/cacerts/cacert.pem`.0
# http://server1/pub/materials/cacert.pem
) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# Create ldap server certs
############################################################
echo "create ldap server certs" >>/root/post-chroot-install.log
(
# to test tls
# ldapsearch -H 'ldap://server1.example.com' -D 'uid=guest01,ou=People,dc=example,dc=com' -x -W -b "dc=example,dc=com" -ZZ -d1

cd /etc/pki/tls/certs
#(umask 77 ; /usr/bin/openssl genrsa -passout pass:asdf -out /etc/pki/tls/certs/ldap.key -aes128 2048)
#openssl rsa -passin pass:asdf -in /etc/pki/tls/certs/ldap.key -out /etc/pki/tls/certs/ldap.key
(umask 77 ; /usr/bin/openssl genrsa -passout pass:asdf -out /etc/pki/tls/certs/ldap.key 2048)
(umask 77 ; /usr/bin/openssl req $(UTF8) -new -key /etc/pki/tls/certs/ldap.key -out /etc/pki/tls/certs/ldap.csr <<EOF
US
Texas
San Antonio
none

server1.example.com
root@server1.example.com


EOF
)


# password flag
openssl ca -passin pass:cacertpass -in /etc/pki/tls/certs/ldap.csr -out /etc/pki/tls/certs/ldap.crt <<EOF
y
y
EOF

chown ldap:ldap /etc/pki/tls/certs/ldap.*

# Error:
# failed to update database
# TXT_DB error number 2
#
# solution: 
# look in /etc/pki/CA/
# openssl ca -revoke /etc/pki/CA/newcerts/02.pem
#
# to test tls
# ldapsearch -H 'ldap://server1.example.com' -D 'uid=guest01,ou=People,dc=example,dc=com' -x -W -b "dc=example,dc=com" -ZZ -d1

# ERROR:
# ldap_start_tls: Connect error (-11)
#         additional info: TLS error -8172:Unknown code ___f 20
#
# you used the BAD COMMAND:
# openssl x509 -req -passin pass:cacertpass -in /etc/pki/tls/certs/ldap.csr \
# -out /etc/pki/tls/certs/ldap.crt -CA /etc/pki/CA/cacert.pem -CAkey /etc/pki/CA/private/cakey.pem
#
# instead of the GOOD COMMAND:
# openssl ca -passin pass:cacertpass -in /etc/pki/tls/certs/ldap.csr -out /etc/pki/tls/certs/ldap.crt

# how to verify the certificate
# openssl verify -purpose sslserver -CAfile /etc/pki/CA/cacert.pem /etc/pki/tls/certs/ldap.crt
# how to make the hash link for /etc/openldap/cacerts
# ln -s server.pem `openssl x509 -hash -noout -in server.pem`.0
# cp /etc/pki/tls/cacert.pem /etc/openldap/cacerts/
# ln -s /etc/openldap/cacerts/cacert.pem /etc/openldap/cacerts/`openssl x509 -hash -noout -in /etc/openldap/cacerts/cacert.pem`.0
) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# ldap server
############################################################
echo "ldap server" >>/root/post-chroot-install.log
(
cat >>/etc/openldap/slapd.d/cn=config.ldif <<EOF
olcTLSCACertificateFile: /etc/pki/CA/cacert.pem
olcTLSCertificateFile: /etc/pki/tls/certs/ldap.crt
olcTLSCertificateKeyFile: /etc/pki/tls/certs/ldap.key
olcTLSCRLCheck: none
olcTLSVerifyClient: never
EOF

# 5-9-2012
#/etc/pki/CA/cacert.pem is not readable by "ldap"           [WARNING]
#/etc/pki/tls/certs/ldap.crt is not readable by "ldap"      [WARNING]


cd /usr/share/migrationtools
sed -e s/padl/example/ -e s/ou=Group/ou=Groups/ migrate_common.ph -i.bak
awk -F: '{if (($3 > 999) && ($3 != 65535)) print $0}' /etc/passwd >/tmp/passwd
awk -F: '{if (($3 > 999) && ($3 != 65535)) print $0}' /etc/group >/tmp/group
./migrate_base.pl >/root/ldap.ldif
./migrate_passwd.pl /tmp/passwd >>/root/ldap.ldif
./migrate_group.pl /tmp/group >>/root/ldap.ldif
grep dc=my-domain /etc/openldap/slapd.d/* -Rl|xargs sed -i -e s/dc=my-domain/dc=example/
# password flag
# use the command "slappasswd" to generate the hash
# the following command makes a hash with the password "password" and places it in the config file
# password flag
export bdbldif=$(find /etc/openldap/slapd.d/ -name "*bdb.ldif")
echo "olcRootPW: $(slappasswd -ns tsa3ldapadmin)" >>"$bdbldif"

cat >/root/.ldaprc <<EOF
BINDDN cn=Manager,dc=example,dc=com
EOF
/etc/init.d/slapd start
chkconfig slapd on
sleep 3
# password flag
ldapadd -c -f /root/ldap.ldif -H ldap://localhost -w password -x -D "cn=Manager,dc=example,dc=com"
) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# kerberos - this is not implimented
############################################################
echo "partial kerberos" >>/root/post-chroot-install.log
(
mv /etc/krb5.conf{,.backup}
# step 2
cat >/etc/krb5.conf <<EOF
[logging]
 default = FILE:/var/log/krb5libs.log
 kdc = FILE:/var/log/krb5kdc.log
 admin_server = FILE:/var/log/kadmind.log

[libdefaults]
 default_realm = EXAMPLE.COM
 dns_lookup_realm = false
 dns_lookup_kdc = false
 ticket_lifetime = 24h
 renew_lifetime = 7d
 forwardable = true

[realms]
# EXAMPLE.COM = {
#  kdc = kerberos.example.com
#  admin_server = kerberos.example.com
# }
 SERVER1.EXAMPLE.COM = {
  kdc = 172.26.0.1:88
  admin_server = 172.26.0.1:749
 }

[domain_realm]
# .example.com = EXAMPLE.COM
# example.com = EXAMPLE.COM
 server1.example.com = SERVER1.EXAMPLE.COM
EOF

for i in `seq 1 50`; do
cat >>/etc/krb5.conf <<EOF
 station$i.example.com = SERVER1.EXAMPLE.COM
EOF
done

#[appdefaults]
#validate = true

# step 3
# kdb5_util create -r SERVER1.EXAMPLE.COM -s
# it will prompt for the master database password

# step 4
#vi /var/kerberos/krb5kdc/kdc.conf
#[realms]
# SERVER1.EXAMPLE.COM = {
# master_key_type = des3-hmac-sha1
# default_principal_flags = +preauth

# step 5
#vi /var/kerberos/krb5kdc/kadm5.acl
#*/admin@SERVER1.EXAMPLE.COM          *

# step 6
# kadmin.local
# kadmin.local
# addprinc root/admin
# enter password
# password again
# addprinc krbuser
# enter password
# password again


# step 7
# still in kadmin.local
# listprincs
# getprinc krbuser

# step 8, 9, 10
# step 9
# may need to fix selinux context
# restorecon -R -v /var/kerberos/krb5kdc
# restorcecon -R -v /var/log

# step 10
# chkconfig krb5kdc on
# service krb5kdc start
# chkconfig kadmin on
# service kadmin start
) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# iSCSI targets
############################################################
echo "create iscsi targets" >>/root/post-chroot-install.log
(
# http://www.linuxjournal.com/content/creating-software-backed-iscsi-targets-red-hat-enterprise-linux-6
# 25k * 4k = 100m, adjust sizes to suit your needs
# WARNING: If you have this create entries for stations 10 or higher, have a separate loop
# handle them so that the IP address restriction does not get screwed up (.2010, for instance).

mkdir -p /var/lib/tgtd
if [ ! -d /var/lib/tgtd ];then echo "/var/lib/tgtd"; fi

for i in `seq -w 1 50`
do
  dd if=/dev/zero of=/var/lib/tgtd/station$i bs=1k count=25k
  cat >>/etc/tgt/targets.conf <<EOF
<target iqn.2011-02.com.example.server1:station$i>
   backing-store /var/lib/tgtd/station$i
   initiator-address 172.26.0.2$i
</target>

EOF
done

restorecon -R /var/lib/tgtd
chkconfig tgtd on
service tgtd start
chkconfig iscsid on
service iscsid start
) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

############################################################
# final steps
############################################################
echo "final steps" >>/root/post-chroot-install.log
# 0.17.11
(
mkdir -p /var/ftp/pub/plusrepo
if [ ! -d /var/ftp/pub/plusrepo ];then echo "failed to create /var/ftp/pub/plusrepo"; fi
mkdir -p /var/ftp/pub/materials
if [ ! -d /var/ftp/pub/materials ];then echo "failed to create /var/ftp/pub/materials"; fi

# 0.17.15.2
if [[ "$short_name" == *centos* ]]
then
cat >/var/ftp/pub/materials/server1.repo <<EOF
[server1]
name=$distro_name
baseurl=ftp://server1/pub/$short_name/
enabled=1
gpgcheck=0
#gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release

[plusrepo]
name=Additional Packages
baseurl=ftp://server1/pub/plusrepo
enabled=0
gpgcheck=0
EOF

fi

if [[ "$short_name" == *rhel* ]]
then
cat >/var/ftp/pub/materials/server1.repo <<EOF
[server1]
name=$distro_name
baseurl=ftp://server1/pub/$short_name/Server
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release

[plusrepo]
name=Additional Packages
baseurl=ftp://server1/pub/plusrepo
enabled=0
gpgcheck=0
EOF
fi

mkdir -m 700 -p /root/.ssh
if [ ! -d /root/.ssh ];then echo "failed to create /root/.ssh"; fi
ssh-keygen -q -t rsa -N '' -f /root/.ssh/id_rsa
cp /root/.ssh/id_rsa.pub /var/ftp/pub/materials/
echo "UseDNS no" >>/etc/ssh/sshd_config
echo "search example.com" >>/etc/resolv.conf
# less readable, but left as a note. & replaces the matched text
# sed -e 's/GSSAPIAuthentication yes/#&/' -i /etc/ssh/sshd_config
sed -e 's/#GSSAPIAuthentication no/GSSAPIAuthentication no/' -e 's/GSSAPIAuthentication yes/#GSSAPIAuthentication yes/' -i /etc/ssh/sshd_config
# add ip_conntrack_ftp to iptables modules loaded
# 0.17.14.1 added -i.bak
sed -e 's/IPTABLES_MODULES="/&ip_conntrack_ftp /' -i.bak /etc/sysconfig/iptables-config

echo "server1" >/var/www/html/index.html

# password flag
useradd -g users -g 100 localuser
echo "password" | passwd --stdin localuser

#chkconfig iptables off

rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release) 2>&1 | \
tee -a /root/post-chroot-install.log | tee -a /dev/console

# While it is slight offensive to embed the station kickstart in the server kickstart,
# I can use the variables for the http path and initial repo, so manual edits are no long required.
### Start ###
cat >/var/ftp/pub/materials/station_ks.cfg <<EOF
# station kickstart
# 0.5
# added tsauser
#
# 0.5.2
# clearpart now removes partitions on all hard drives attached
#
# 0.5.3
# corrected tar line for vmware tools
#
# 0.5.4
# disabled GSSAPIAuthentication so ssh will login faster
#
# 0.5.5
# set tsauser password, previously it was setting an incorrect user
#
# 0.5.6
# removed nx from the rpm list
# nxclient
# nxnode
# nxserver
#
# 0.5.7
# changed vmware tools http name to VMwareTools.tar.gz
# removed plus repo
#
# 0.5.8
# added --initlabel to clearpart command
# clearpart --linux --initlabel
#
# 0.5.9
# Starting with RHEL 6.2, authorized_keys has a different selinux context that prevents pki login
# added restorecon -R /root/.ssh
# and while we are at it, chmod 600 /root/.ssh
#
# 0.5.10
# Added /etc/kickstart-release so it is easier to identify the installed version
# added the kickstart-release contents to /etc/issue so it displays on the console
# remarked out the line because it should no longer be an issue: echo "UseDNS no" >>/etc/ssh/sshd_config
#
# 0.5.11
# station kickstart is now embedded in the server kickstart to make use of variables

############################################################
# Installing the station
############################################################
# The server provides dhcp on the private network and
# pxe/tftp to install the stations.
#
# Power on the workstation, and it will boot from network,
# obtain a dhcp address, pull the kernel from tftp,
# then will pull the kickstart and remaining files
# from server1 automatically.

#version=DEVEL
# 0.5.11
# export repo_file
# export distro_name
# export short_name
install
# 0.5.11
url --url=http://server1/pub/$short_name/
lang en_US.UTF-8
keyboard us
network --onboot yes --device eth0 --bootproto dhcp --noipv6
# password flag
rootpw password
firewall --service=ssh
authconfig --enableshadow --passalgo=sha512
selinux --enforcing
timezone --utc America/Chicago
bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb quiet"
# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work
#clearpart --linux --drives=sda
clearpart --linux --initlabel

part /boot --fstype=ext4 --size=500
part pv.008002 --grow --size=1

volgroup VolGroup --pesize=4096 pv.008002
logvol / --fstype=ext4 --name=lv_root --vgname=VolGroup --grow --size=1024 --maxsize=51200
logvol swap --name=lv_swap --vgname=VolGroup --grow --size=1008 --maxsize=2016
# 0.5.11
repo --name="$distro_name"  --baseurl=http://server1/pub/$short_name/ --cost=100
#repo --name="Plus"  --baseurl=http://server1/pub/plusrepo/ --cost=100

%packages
@base
@client-mgmt-tools
@core
@debugging
@basic-desktop
@desktop-debugging
@desktop-platform
@directory-client
@fonts
@general-desktop
@graphical-admin-tools
@input-methods
@internet-browser
@java-platform
@legacy-x
@network-file-system-client
@perl-runtime
@print-client
@remote-desktop-clients
@server-platform
@server-policy
@x11
mtools
pax
python-dmidecode
oddjob
sgpio
genisoimage
wodim
abrt-gui
certmonger
pam_krb5
krb5-workstation
libXmu
perl-DBD-SQLite
%end

%post
(
if dmidecode|grep -q "Product Name: VMware Virtual Platform"
then
	cd /tmp
	wget http://server1/pub/materials/VMwareTools.tar.gz
	tar xzvf VMwareTools.tar.gz
	cd vmware-tools-distrib
	./vmware-install.pl default
fi

############################################################
# /etc/kickstart-release
############################################################
echo "$distro_name Lab in a Box - server1 kickstart 0.5.11" >/etc/kickstart-release
cat /etc/kickstart-release >>/etc/issue

chkconfig NetworkManager off
chkconfig firstboot off

mkdir -m 700 -p /root/.ssh
wget -q -O - http://server1/pub/materials/id_rsa.pub >>/root/.ssh/authorized_keys
# 0.5.9
restorecon -R /root/.ssh
chmod 600 /root/.ssh/authorized_keys
wget -q -O /etc/yum.repos.d/server1.repo http://server1/pub/materials/server1.repo

#echo "UseDNS no" >>/etc/ssh/sshd_config

echo "default web url" > /root/default.html
echo "welcome to vhost" > /root/vhost.html
sed -i -e s/id:.:initdefault:/id:3:initdefault:/ /etc/inittab
sed -e 's/#GSSAPIAuthentication no/GSSAPIAuthentication no/' -e 's/GSSAPIAuthentication yes/#GSSAPIAuthentication yes/' -i /etc/ssh/sshd_config

# password flag
useradd -g users -g 100 tsauser
echo "password" | passwd --stdin tsauser
wget -q -O /etc/openldap/cacerts/cacert.pem http://server1/pub/materials/cacert.pem
ln -s /etc/openldap/cacerts/cacert.pem /etc/openldap/cacerts/`openssl x509 -hash -noout -in /etc/openldap/cacerts/cacert.pem`.0
) 2>&1 | tee /root/install.log | tee /dev/console
EOF
###  End  ###
